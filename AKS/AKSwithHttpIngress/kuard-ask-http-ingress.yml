apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuard
  template:
    metadata:
      labels:
        app: kuard
    spec:
      volumes:
        - name: "kuard-data"
          hostPath:
            path:  "/var/lib/kuard"
      containers:
      - name: kuard
        image: gcr.io/kuar-demo/kuard-amd64:blue
        volumeMounts:
          - mountPath:  "/data"
            name:  "kuard-data"
        ports:
        - name:  http
          containerPort:  8080
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "128Mi"
          limits:
            cpu: "1000m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: kuard 
spec:
  type: ClusterIP
  ports:
  - port: 8080
  selector:
    app: kuard
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kuard
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: kuard.de2664f0f36a41cb8ba4.westeurope.aksapp.io #You'll need to replace this. 
    http:
      paths:
      - backend:
          serviceName: kuard
          servicePort: 8080
        path: /